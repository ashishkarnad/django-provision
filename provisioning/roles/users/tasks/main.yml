---

- name: Change root password
  user:
    name: root
    password: '{{ root_password }}'
    shell: /bin/bash

- name: Create new linux user 
  user: 
    name: "{{ user }}"
    password: "{{ password }}"
    shell: /bin/bash

- name: Create a 2048-bit SSH key for the new user
  user: 
    name: "{{ item }}" 
    generate_ssh_key: yes
    ssh_key_bits: 2048
  with_items:
    - "{{ user }}"
    - root

- name: Add user rsa public key to authorized users.
  authorized_key: 
    user: "{{ item }}"
    key: "{{ lookup('file', 'rsa_pub_key_filepath') }}"
  with_items:
    - "{{ user }}"
    - root

- name: Add new user to sudoers
  lineinfile:
    dest: '/etc/sudoers'
    insertafter: '^root    ALL=(ALL:ALL) ALL'
    line: '{{ user }} ALL=(ALL:ALL) ALL'
  notify:
    - restart ssh

- name: Append a line of code in bashrc to use keychain. Avoid ssh passphrase.
  lineinfile: 
    dest: "/home/{{ user }}/.bashrc"
    line: "eval `keychain --eval id_rsa`"

# SSH agent forwarding for deploy user.
- name: send private key to remote deploy user
  copy: 
    src: '~/.ssh/id_rsa'
    dest: "/home/{{ user }}/.ssh/id_rsa"

- name: send public key to remote deploy user
  copy: 
    src: '~/.ssh/id_rsa.pub'
    dest: "/home/{{ user }}/.ssh/id_rsa.pub"

# SSH agent forwarding for root user, not necessary just in case.
- name: send private key to root user
  sudo_user: root 
  copy: 
    src: '{{ rsa_priv_key_filepath }}'
    dest: "/root/.ssh/id_rsa"

- name: send public key to root user 
  sudo_user: root 
  copy: 
    src: '{{ rsa_pub_key_filepath }}'
    dest: "/root/.ssh/id_rsa.pub"

- name: add enviroment variables to user env
  sudo_user: "{{ user }}"
  raw: "ssh-keyscan -H {{ remote_host }} >> $HOME/.ssh/known_hosts"

- name: add enviroment variables to user env
  raw: "ssh-keyscan -H {{ remote_host }} >> /etc/ssh/ssh_known_hosts"